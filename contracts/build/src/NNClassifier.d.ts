import { Field, SmartContract, State } from 'o1js';
export declare class NNClassifier extends SmartContract {
    result: State<import("o1js/dist/node/lib/field.js").Field>;
    probability: State<import("o1js/dist/node/lib/field.js").Field>;
    outputHash: State<import("o1js/dist/node/lib/field.js").Field>;
    allHashes: State<import("o1js/dist/node/lib/field.js").Field>;
    init(): void;
    feedforward(in1: Field, in2: Field, in3: Field, in4: Field, in5: Field, in6: Field, in7: Field, in8: Field, in9: Field, in10: Field, in11: Field, in12: Field, in13: Field, in14: Field, in15: Field, in16: Field, in17: Field, in18: Field, in19: Field, in20: Field, in21: Field, in22: Field, in23: Field, in24: Field, in25: Field, in26: Field, in27: Field, in28: Field, in29: Field, in30: Field, in31: Field, in32: Field, in33: Field, in34: Field, in35: Field, in36: Field, in37: Field, in38: Field, in39: Field, in40: Field, in41: Field, in42: Field, in43: Field, in44: Field, in45: Field, in46: Field, in47: Field, in48: Field, in49: Field, in50: Field, in51: Field, in52: Field, in53: Field, in54: Field, in55: Field, in56: Field, in57: Field, in58: Field, in59: Field, in60: Field, in61: Field, in62: Field, in63: Field, in64: Field, in65: Field, in66: Field, in67: Field, in68: Field, in69: Field, in70: Field, in71: Field, in72: Field, in73: Field, in74: Field, in75: Field, in76: Field, in77: Field, in78: Field, in79: Field, in80: Field, in81: Field, in82: Field, in83: Field, in84: Field, in85: Field, in86: Field, in87: Field, in88: Field, in89: Field, in90: Field, in91: Field, in92: Field, in93: Field, in94: Field, in95: Field, in96: Field, in97: Field, in98: Field, in99: Field, in100: Field, in101: Field, in102: Field, in103: Field, in104: Field, in105: Field, in106: Field, in107: Field, in108: Field, in109: Field, in110: Field, in111: Field, in112: Field, in113: Field, in114: Field, in115: Field, in116: Field, in117: Field, in118: Field, in119: Field, in120: Field, in121: Field, in122: Field, in123: Field, in124: Field, in125: Field, in126: Field, in127: Field, in128: Field, in129: Field, in130: Field, in131: Field, in132: Field, in133: Field, in134: Field, in135: Field, in136: Field, in137: Field, in138: Field, in139: Field, in140: Field, in141: Field, in142: Field, in143: Field, in144: Field, in145: Field, in146: Field, in147: Field, in148: Field, in149: Field, in150: Field, in151: Field, in152: Field, in153: Field, in154: Field, in155: Field, in156: Field, in157: Field, in158: Field, in159: Field, in160: Field, in161: Field, in162: Field, in163: Field, in164: Field, in165: Field, in166: Field, in167: Field, in168: Field, in169: Field, in170: Field, in171: Field, in172: Field, in173: Field, in174: Field, in175: Field, in176: Field, in177: Field, in178: Field, in179: Field, in180: Field, in181: Field, in182: Field, in183: Field, in184: Field, in185: Field, in186: Field, in187: Field, in188: Field, in189: Field, in190: Field, in191: Field, in192: Field, in193: Field, in194: Field, in195: Field, in196: Field): void;
    createMLProof(in1: Field, in2: Field, in3: Field, in4: Field, in5: Field, in6: Field, in7: Field, in8: Field, in9: Field, in10: Field, in11: Field, in12: Field, in13: Field, in14: Field, in15: Field, in16: Field, in17: Field, in18: Field, in19: Field, in20: Field, in21: Field, in22: Field, in23: Field, in24: Field, in25: Field, in26: Field, in27: Field, in28: Field, in29: Field, in30: Field, in31: Field, in32: Field, in33: Field, in34: Field, in35: Field, in36: Field, in37: Field, in38: Field, in39: Field, in40: Field, in41: Field, in42: Field, in43: Field, in44: Field, in45: Field, in46: Field, in47: Field, in48: Field, in49: Field, in50: Field, in51: Field, in52: Field, in53: Field, in54: Field, in55: Field, in56: Field, in57: Field, in58: Field, in59: Field, in60: Field, in61: Field, in62: Field, in63: Field, in64: Field, in65: Field, in66: Field, in67: Field, in68: Field, in69: Field, in70: Field, in71: Field, in72: Field, in73: Field, in74: Field, in75: Field, in76: Field, in77: Field, in78: Field, in79: Field, in80: Field, in81: Field, in82: Field, in83: Field, in84: Field, in85: Field, in86: Field, in87: Field, in88: Field, in89: Field, in90: Field, in91: Field, in92: Field, in93: Field, in94: Field, in95: Field, in96: Field, in97: Field, in98: Field, in99: Field, in100: Field, in101: Field, in102: Field, in103: Field, in104: Field, in105: Field, in106: Field, in107: Field, in108: Field, in109: Field, in110: Field, in111: Field, in112: Field, in113: Field, in114: Field, in115: Field, in116: Field, in117: Field, in118: Field, in119: Field, in120: Field, in121: Field, in122: Field, in123: Field, in124: Field, in125: Field, in126: Field, in127: Field, in128: Field, in129: Field, in130: Field, in131: Field, in132: Field, in133: Field, in134: Field, in135: Field, in136: Field, in137: Field, in138: Field, in139: Field, in140: Field, in141: Field, in142: Field, in143: Field, in144: Field, in145: Field, in146: Field, in147: Field, in148: Field, in149: Field, in150: Field, in151: Field, in152: Field, in153: Field, in154: Field, in155: Field, in156: Field, in157: Field, in158: Field, in159: Field, in160: Field, in161: Field, in162: Field, in163: Field, in164: Field, in165: Field, in166: Field, in167: Field, in168: Field, in169: Field, in170: Field, in171: Field, in172: Field, in173: Field, in174: Field, in175: Field, in176: Field, in177: Field, in178: Field, in179: Field, in180: Field, in181: Field, in182: Field, in183: Field, in184: Field, in185: Field, in186: Field, in187: Field, in188: Field, in189: Field, in190: Field, in191: Field, in192: Field, in193: Field, in194: Field, in195: Field, in196: Field, outputHash: Field): void;
    verifyMLProof(inputHash: Field, outputHash: Field): void;
}
